#!/bin/bash

#FORMAT=json
#FORMAT="csv[separator=', '](timestamp,textPayload)"

usage() {
  echo "Usage: $0 [ -e ENV ] && [ -s SERIAL ] || [-p PATIENT_ID]" 1>&2; exit 1;
}

exit_abnormal() {
  exit 1
}

while getopts "cje:s:p:t:-:" options; do

	case "${options}" in

	c)
		FORMAT="csv[separator=', '](timestamp,textPayload)"
		;;
	j)
		FORMAT=json
		;;
	e)
		ENV=${OPTARG}
		gcloud config set project swordhealth-production-$ENV
		;;
	t)
		DATE1=${OPTARG}
		;;
	-)

	case "${OPTARG}" in
                time1)
			val="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
			DATE1=${val}
			DATE1=${OPTARG}
			;;
                time2)
			val=${OPTARG#*=}
			opt=${OPTARG%=$val}
			DATE2=${val}
			echo $DATE2
			exit
			;;
                *)
			if [ "$OPTERR" = 1 ] && [ "${optspec:0:1}" != ":" ]; then
				echo "Unknown option --${OPTARG}" >&2
			fi
			;;
        esac
        ;;

#	t)
#		DATE2=${OPTARG}
#		;;
	s)
		SERIAL=${OPTARG}
		FILTER='projects/swordhealth-production-'$ENV'/logs/mobile_log labels.serial="'$SERIAL'" AND timestamp>="'$DATE1'T00:00:00Z"'
		if ! [ -n "$DATE2" ]; then
			DATE2=$(date +%Y-%m-%dT%H:%M:%S.000Z)
		fi
		MESSAGE="${FILTER} AND timestamp<=\"$DATE2\""
		echo "query: $MESSAGE"
		if [ $FORMAT == "json" ]; then
			gcloud logging read --format=$FORMAT "${MESSAGE}" > $ENV-$SERIAL.json
		else
			gcloud logging read --format="${FORMAT}" "${MESSAGE}" > $ENV-$SERIAL.csv
		fi
		;;

	p)
		PATIENT=${OPTARG}
		FILTER='projects/swordhealth-production-'$ENV'/logs/mobile_log labels.patient_id="'$PATIENT'" AND timestamp>="2022-04-01T00:00:00Z"'
		if ! [ -n "$DATE2" ]; then
			DATE2=$(date +%Y-%m-%dT%H:%M:%S.000Z)
		fi
		MESSAGE="${FILTER} AND timestamp<=\"$DATE2\""
		echo "query: $MESSAGE"
		if [[ $FORMAT == "json" ]]; then
			gcloud logging read --format=$FORMAT "${MESSAGE}" > $ENV-$PATIENT.json
		else
			gcloud logging read --format="${FORMAT}" "${MESSAGE}" > $ENV-$PATIENT.csv
		fi
		;;
	:)
		echo "Error: -${OPTARG} requires an argument."
		usage
		;;
	*)
		usage
		;;
	esac
done



exit 0
